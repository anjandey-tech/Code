import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NavigableMap;
import java.util.Set;
import java.util.TreeMap;

public class map {
    public static void main(String [] args)
    {
        Map<String, Integer> m = new HashMap<String,Integer>();
        m.put("anjan", 1);
        m.put("anjali", 2);
        m.put("manish",3);

        //get value of the key
        System.out.println(m.getOrDefault("ajan", 0));
        System.out.println(m.containsKey("anjali"));
        m.remove("manish");
        System.out.println(m.containsKey("manish"));

        //traverse map
        Set<Map.Entry<String, Integer>> entryset = m.entrySet(); 
        for(Map.Entry<String,Integer> e: entryset)
        {
            System.out.println(e.getKey()+" , " + e.getValue());
        }

 // traverse map
        Set<String> s=m.keySet();
        for(String key:s)
        {
            System.out.println(key+ " "+ m.get(key));
        }

        NavigableMap<Integer,String> tmap = new TreeMap<Integer,String>((a,b)->b-a);
        tmap.put(1,"anjan");
        tmap.put(2,"anjali");
        tmap.put(3,"manish");
        tmap.put(4,"Karishma");
        
        Set<Map.Entry<Integer,String>> entset = tmap.entrySet(); 
        for(Map.Entry<Integer,String> e: entset)
        {
            System.out.println(e.getKey()+" , " + e.getValue());
        }

 
 

      //compare two map
        Map<Integer, String> map1 = new LinkedHashMap<Integer, String>();
        Map<Integer, String> map2 = new LinkedHashMap<Integer, String>();
  
        // Mapping string values to int keys
        map1.put(10, "Geeks");
        map1.put(15, "4");
        map1.put(20, "Geeks");
        map1.put(25, "Welcomes");
        map1.put(30, "You");
  
        // Mapping string values to int keys
        map2.put(10, "Geeks");
        map2.put(25, "Welcomes");
        map2.put(15, "4");
        map2.put(20, "Geeks");
      
        map2.put(30, "You");
  
        // Displaying the Map1
        System.out.println("First Map: "
                           + map1);
  
        // Displaying the Map2
        System.out.println("Second Map: "
                           + map2);
  
        // Checking the equality
        System.out.println("Equality: " + map1.equals(map2));


         

    }
    
}
