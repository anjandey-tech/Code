 #include<bits/stdc++.h>
 using namespace std;
 
 class stackk{
    
    
    queue<int > q1, q2;
    int curr_size;
    
    public:
    
    stackk()
    {
       
       curr_size = 0;
    }
    
   void push(int x)
    { 
       curr_size++;
       q2.push(x); //push into q2;
       
       while(!q1.empty()) // transfer all there element of q1 to q2 one by one 
       {
          
          q2.push(q1.front());
          q1.pop();
       }
       
       
       queue<int> tempqueue =q1; //swap q1 and q2
       q1=q2;
       q2 = tempqueue;
       
    }
    
    void pop()
    {
       if(!q1.empty())
       {
       q1.pop();
       curr_size--;
          
       }
    }
    
    int top()
    {
       if(!q1.empty())
       {
          return q1.front();
       }
    }
    
    int size()
    {
       
       return curr_size;
    }
    
 };
 
 
 class stackbyonequeue
 {
    
    queue<int> q; //inbuild queue
    int   stackbyonequeue_size; 
       public: 
     stackbyonequeue()
     {
        
        stackbyonequeue_size = 0;
     }
  
    void push(int x)
    {
       q.push(x);
       stackbyonequeue_size++;
       for(int i=0;i<stackbyonequeue_size-1;i++)
       {
          
          q.push(q.front());
          q.pop();
       }
       
    }
    
    void pop()
    {
       stackbyonequeue_size--;
       
       if(!q.empty())
       {
         q.pop(); 
       }
    }
    
    int top()
    {
       if(!q.empty())
       {
          return q.front();
       }
    }
    int size()
    {
       return stackbyonequeue_size;
    }
    
    
 };
 int main()
 {
 stackk s;
    s.push(1);
    s.push(2);
    s.push(3);
  
    cout << "current size: " << s.size()
         << endl;
    cout << s.top() << endl;
    s.pop();
    cout << s.top() << endl;
    s.pop();
    cout << s.top() << endl;
  
    cout << "current size: " << s.size()
         << endl;   
    
    stackbyonequeue ss;
    ss.push(1);
    ss.push(2);
    ss.push(3);
  
    cout << "current size: " << ss.size()
         << endl;
    cout << ss.top() << endl;
    ss.pop();
    cout << ss.top() << endl;
    ss.pop();
    cout << ss.top() << endl;
  
    cout << "current size: " << ss.size()
         << endl;   
    
    
    
    
    
 }
