//pepcoding
import java.io.*;
import java.util.*;

public class Main{
  

public static void main(String[] args) throws Exception {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    String exp = br.readLine();

     Stack<Integer> operands = new Stack<>();
      Stack<Character> operaters = new Stack<>();
      for(int i=0;i<exp.length();i++)
      {
         char ch=exp.charAt(i);
         
         if(ch =='(')
         operaters.push(ch);
         
         else if (Character.isDigit(ch))
         {
        operands.push(ch - '0');
      }
         else if(ch == '+' || ch == '-' || ch == '*' || ch == '/')
         {
             while(operaters.size() > 0 && operaters.peek() != '(' && 
               precedence(ch) <= precedence(operaters.peek()))
               {
                   int val2 = operands.pop();
          int val1 = operands.pop();
          char op = operaters.pop();

          int opval = operation(val1, val2, op);
          operands.push(opval); 
               }
               operaters.push(ch);
         }
         else if(ch==')')
         {
             while (operaters.size() > 0 && operaters.peek() != '(') {
          int val2 = operands.pop();
          int val1 = operands.pop();
          char op = operaters.pop();

          int opval = operation(val1, val2, op);
          operands.push(opval);
        }
       if (operaters.size() > 0) {
          operaters.pop();
        }
         }
      }
      while (operaters.size() > 0) {
      int val2 = operands.pop();
      int val1 = operands.pop();
      char op = operaters.pop();

      int opval = operation(val1, val2, op);
      operands.push(opval);
    }

    int val = operands.pop();
    System.out.println(val);
 }
 
 
 public static int precedence(char operater)
 {
     if(operater=='+')
     return 1;
     else if(operater=='-')
     return 1;
     
    else if(operater=='*')
     return 2;
     
    else  
     return 2;
 }
 
 public static int operation(int val1, int val2, char operater)
 {
     if(operater=='+')
     return val1+val2;
     else if(operater=='-')
     return  val1-val2;
     
     else if(operater=='*')
     return val1*val2;
     
     else 
     
     return val1/val2;
 }
}
