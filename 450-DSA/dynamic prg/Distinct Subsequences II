//leetcode really hard
//not understand properly
class Solution {
public:
    const int mod = 1e9+7;
    int distinctSubseqII(string S) {
        return countDistinctSubs(S);
    }
    
int countDistinctSubs(string s){
    int n = s.length();
    long int lastSeenRep[26],prev = 1,curr;  //last seen repeatition
    memset(lastSeenRep,0,sizeof(lastSeenRep));
    for(int i=0;i<n;i++)
    {
        curr = (2*prev)%mod;
        if(lastSeenRep[s[i] - 'a'] != 0)
        {
            curr = (curr - lastSeenRep[s[i] - 'a'] + mod)%mod;
            curr = curr<0?(curr+mod)%mod:curr;
        }
        lastSeenRep[s[i] - 'a'] = (prev)%mod;
        prev = curr;
    }
    return (curr-1)%mod;
    }
};
