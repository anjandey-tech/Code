//adjacency list
#include <bits/stdc++.h>
using namespace std;

int main()
{
    
 int vertix, edge;
 cin>>vertix>>edge; // 6 5 
 vector<int> graph[vertix+1]; // we declare 2d vector , row = vertix +1, we dont mention column
 
 for(int  i=0;i<edge ;i++)
 {
     int x,y;
     cin>>x>>y; // 1 2 // 1  5  // 2  3 // 3  4 //3  6
     graph[x].push_back(y);
     graph[y].push_back(x);
 }
 
 for(int i=1;i<=vertix;i++)
 {
     cout<<"size = " <<graph[i].size()<<endl;//number of adjacent vertex
     cout<<i<< " ----------"; // print vertex
     for(int j=0; j<graph[i].size();j++)
     {
         
         cout<<graph[i][j]<<" "; // we print adjacent vertex
     }
     cout<<endl;
     
 }
}
 // adjacency matrix
 
 
 #include <bits/stdc++.h>
using namespace std;
int main() {
 
	 int vertex,edge;
	 cin>>vertex>>edge;
	 int graph[vertex+1][vertex+1];
	 for(int i=1;i<=vertex;i++)
	 {
	     for(int j=1;j<=vertex;j++)
	     {
	         graph[i][j]=0;
	     }
	 }
	 
	 for(int i=0;i<edge;i++)
	 {
	     int x,y;
	     cin>>x>>y;
	     graph[x][y]=1;
	     graph[y][x]=1;
	     
	 }
	  for(int i=1;i<=vertex;i++)
 {
      
     cout<<i<< " ----------"; // print vertex
     for(int j=1; j<=vertex;j++)
     {
         
         cout<<graph[i][j]<<" "; // we print adjacent vertex
     }
     cout<<endl;
     
 }
}
 
