#include<bits/stdc++.h>
using namespace std;

int CountPS(char S[], int N);

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int N;
        cin>>N;
        char S[N+1];
        cin>>S;
        cout<<CountPS(S,N)<<endl;
    }
    return 0;
}

// } Driver Code Ends


int CountPS(char s[], int N)
{
     int n=N;
     bool dp[n][n];
        
        int count=0;
        for(int gap=0; gap<n; gap++)
        {
            for(int row=0, col=gap; col<n; row++,col++)
            {
                if(gap == 0)
                {
                    dp[row][col]=true;
                    count++;
                }
                else if(gap == 1) // then only 1st and last char should be same;
                {
                     if(s[row] == s[col])
                     {
                        
                         dp[row][col]=true;
                         count++;
                     }
                    else 
                          dp[row][col]=false;
                } 
                else if(gap>1)//  1st and last char should be same and all remaining  middle chars should be palindrom;
                {
                    if(s[row] == s[col] and dp[row+1][col-1] == true)
                    {
                        dp[row][col]=true;
                        count++;
                    }
                    else
                    {
                        dp[row][col]=false;
                    }
                    
                }
            }
        }
        return count;
    
    
}
