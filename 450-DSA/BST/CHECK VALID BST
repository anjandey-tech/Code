//https://practice.geeksforgeeks.org/problems/check-for-bst/1#
//INORDER TRAVARSAL OF BST IS IN SORTED ORDER
class Solution
{
    vector<int> v;
    void inorder(Node *root)
    {
        if(root== NULL)
        {
            return ;
        }
        else
        {
            inorder(root->left);
            v.push_back(root->data);
            inorder(root->right);
        }
    }
    public:
    bool isBST(Node* root) 
    {
        // Your code here
        inorder(root);
        int t=1;
        for(int i=1;i<v.size();)
        {
            if(v[i-1]<v[i])
            {
                i++;
            }
            else
            {
                t=0;
                break;
            }
        }
        //v.clear();
        if(t==0)
    return     false;
        else
        return true;
        
    }
    
};







another Approach
bool checkNode(Node* node,int min,int max)
{
    if(node==NULL) return 1;
    if(node->data<min||node->data>max)
    {
        return 0;
    }
    else
    {
        checkNode(node->left,min,node->data-1)&&
        checkNode(node->right,node->data+1,max);
    }
}
bool isBST(Node* root) {
    return checkNode(root,INT_MIN,INT_MAX);
}
